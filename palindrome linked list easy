https://leetcode.com/problems/palindrome-linked-list/

solution:
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
      ListNode node=head;
      ListNode fast=head;
        while(node!=null&&fast!=null&&fast.next!=null){
            node=node.next;
            fast=fast.next.next;
        }
        if(fast!=null&&fast.next==null)
            node=node.next;
        ListNode res=reverse(node);
        while(res!=null&&head!=null){
            if(res.val!=head.val)
                return false;
            res=res.next;
            head=head.next;
        }
        return true;
        
    }
    public ListNode reverse(ListNode node){
        ListNode prev=null;
        ListNode curr=node;
        ListNode next=null;
        while(curr!=null){
            next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        return prev;
    }
}
