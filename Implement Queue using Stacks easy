https://leetcode.com/problems/implement-queue-using-stacks/


class MyQueue {
 Stack<Integer> fs = new Stack<>();
 Stack<Integer> rs = new Stack<>();
    public MyQueue() {
        
    }
    
    public void push(int x) {
        if(!fs.isEmpty()){
            fs.push(x);
        }else{
            while(!rs.isEmpty()){
                fs.push(rs.pop());
            }
            fs.push(x);
        }
    }
    
    public int pop() {
         if(!rs.isEmpty()){
            return rs.pop();
        }else{
            while(!fs.isEmpty()){
                rs.push(fs.pop());
            }           
        }
        return  rs.pop();
    }
    
    public int peek() {
         if(!rs.isEmpty()){
           return rs.peek();
        }
        else{            
        }
        return fs.get(0);
    }
    
    public boolean empty() {
        return fs.isEmpty()&&rs.isEmpty();
    }
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.empty();
 */
